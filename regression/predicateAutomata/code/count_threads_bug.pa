start: ({true}() /\ {@[#1] = 26}() /\ {false}()).
final: {true}, {false}, {@[#1] = 9}, {count <= 2}, {count <= 1}, {count <= 0}.
{@[#1] = 26}() --( <29 : initial> : i )-> false.
{@[#1] = 26}() --( <14 : arg=param0> : i )-> false.
{@[#1] = 26}() --( <12 : return=__retres2> : i )-> false.
{@[#1] = 26}() --( <11 : __retres2=(*void)0> : i )-> false.
{@[#1] = 26}() --( <10 : count=(count+1)> : i )-> false.
{@[#1] = 26}() --( <23 : fork(&thread)> : i )-> false.
{@[#1] = 26}() --( <21 : param0=(*void)(*void)0> : i )-> false.
{@[#1] = 26}() --( <20 : fork(&thread)> : i )-> false.
{@[#1] = 26}() --( <18 : param0=(*void)(*void)0> : i )-> false.
{@[#1] = 26}() --( <17 : fork(&thread)> : i )-> false.
{@[#1] = 26}() --( <15 : param0=(*void)(*void)0> : i )-> false.
{@[#1] = 26}() --( <9 : assume(0<=0)> : i )-> false.
{@[#1] = 26}() --( <8 : return=*> : i )-> false.
{@[#1] = 26}() --( <28 : assume(2<count)> : i )-> true.
{@[#1] = 26}() --( <6 : assert(count<=2) : count <= 2> : i )-> false.
{@[#1] = 26}() --( <2 : count=0> : i )-> false.

{false}() --( <29 : initial> : i )-> ({false}() /\ {false}() /\ {false}()).
{false}() --( <14 : arg=param0> : i )-> ({false}() /\ {false}() /\ {false}()).
{false}() --( <12 : return=__retres2> : i )-> ({false}() /\ {false}()
                                                 /\ {false}()).
{false}() --( <11 : __retres2=(*void)0> : i )-> ({false}() /\ {false}()
                                                   /\ {false}()).
{false}() --( <10 : count=(count+1)> : i )-> ({false}() /\ {false}()
                                                /\ {false}()).
{false}() --( <23 : fork(&thread)> : i )-> ({false}() /\ {false}()
                                              /\ {false}()).
{false}() --( <21 : param0=(*void)(*void)0> : i )-> ({false}() /\ {false}()
                                                       /\ {false}()).
{false}() --( <20 : fork(&thread)> : i )-> ({false}() /\ {false}()
                                              /\ {false}()).
{false}() --( <18 : param0=(*void)(*void)0> : i )-> ({false}() /\ {false}()
                                                       /\ {false}()).
{false}() --( <17 : fork(&thread)> : i )-> ({false}() /\ {false}()
                                              /\ {false}()).
{false}() --( <15 : param0=(*void)(*void)0> : i )-> ({false}() /\ {false}()
                                                       /\ {false}()).
{false}() --( <9 : assume(0<=0)> : i )-> ({false}() /\ {false}() /\ {false}()).
{false}() --( <8 : return=*> : i )-> ({false}() /\ {false}() /\ {false}()).
{false}() --( <28 : assume(2<count)> : i )-> ({false}() /\ {count <= 2}()
                                                /\ {false}()
                                                /\ {count <= 1}()
                                                /\ {false}()
                                                /\ {count <= 2}()).
{false}() --( <6 : assert(count<=2) : count <= 2> : i )-> ({false}()
                                                             /\ {false}()
                                                             /\ {false}()).
{false}() --( <2 : count=0> : i )-> ({false}() /\ {false}() /\ {false}()).

{@[#1] = 21}(i) --( <29 : initial> : j )-> ({@[#1] = 21}(i) /\ j != i).
{@[#1] = 21}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 21}(i) /\ j != i).
{@[#1] = 21}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 21}(i)
                                                       /\ j != i).
{@[#1] = 21}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 21}(i)
                                                         /\ j != i).
{@[#1] = 21}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 21}(i) /\ j != i).
{@[#1] = 21}(i) --( <23 : fork(&thread)> : j )-> false.
{@[#1] = 21}(i) --( <21 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 21}(i) --( <20 : fork(&thread)> : j )-> false.
{@[#1] = 21}(i) --( <18 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 21}(i) --( <17 : fork(&thread)> : j )-> j = i.
{@[#1] = 21}(i) --( <15 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 21}(i) --( <9 : assume(0<=0)> : j )-> false.
{@[#1] = 21}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 21}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 21}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> false.
{@[#1] = 21}(i) --( <2 : count=0> : j )-> false.

{@[#1] = 10}(i) --( <29 : initial> : j )-> ({@[#1] = 10}(i) /\ j != i).
{@[#1] = 10}(i) --( <14 : arg=param0> : j )-> (j = i
                                                 \/ ({@[#1] = 10}(i)
                                                       /\ j != i)).
{@[#1] = 10}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 10}(i)
                                                       /\ j != i).
{@[#1] = 10}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 10}(i)
                                                         /\ j != i).
{@[#1] = 10}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 10}(i) /\ j != i).
{@[#1] = 10}(i) --( <23 : fork(&thread)> : j )-> ({@[#1] = 10}(i) /\ j != i).
{@[#1] = 10}(i) --( <21 : param0=(*void)(*void)0> : j )-> ({@[#1] = 10}(i)
                                                             /\ j != i).
{@[#1] = 10}(i) --( <20 : fork(&thread)> : j )-> ({@[#1] = 10}(i) /\ j != i).
{@[#1] = 10}(i) --( <18 : param0=(*void)(*void)0> : j )-> ({@[#1] = 10}(i)
                                                             /\ j != i).
{@[#1] = 10}(i) --( <17 : fork(&thread)> : j )-> ({@[#1] = 10}(i) /\ j != i).
{@[#1] = 10}(i) --( <15 : param0=(*void)(*void)0> : j )-> ({@[#1] = 10}(i)
                                                             /\ j != i).
{@[#1] = 10}(i) --( <9 : assume(0<=0)> : j )-> ({@[#1] = 10}(i) /\ j != i).
{@[#1] = 10}(i) --( <8 : return=*> : j )-> ({@[#1] = 10}(i) /\ j != i).
{@[#1] = 10}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 10}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> ({@[#1] = 10}(
                                                                 i) /\ 
                                                                   j != i).
{@[#1] = 10}(i) --( <2 : count=0> : j )-> ({@[#1] = 10}(i) /\ j != i).

{@[#1] = 6}(i) --( <29 : initial> : j )-> ({@[#1] = 6}(i) /\ j != i).
{@[#1] = 6}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 6}(i) /\ j != i).
{@[#1] = 6}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 6}(i) /\ j != i).
{@[#1] = 6}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 6}(i)
                                                        /\ j != i).
{@[#1] = 6}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 6}(i) /\ j != i).
{@[#1] = 6}(i) --( <23 : fork(&thread)> : j )-> j = i.
{@[#1] = 6}(i) --( <21 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 6}(i) --( <20 : fork(&thread)> : j )-> false.
{@[#1] = 6}(i) --( <18 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 6}(i) --( <17 : fork(&thread)> : j )-> false.
{@[#1] = 6}(i) --( <15 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 6}(i) --( <9 : assume(0<=0)> : j )-> false.
{@[#1] = 6}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 6}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 6}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> false.
{@[#1] = 6}(i) --( <2 : count=0> : j )-> false.

{@[#1] = 12}(i) --( <29 : initial> : j )-> ({@[#1] = 12}(i) /\ j != i).
{@[#1] = 12}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 12}(i) /\ j != i).
{@[#1] = 12}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 12}(i)
                                                       /\ j != i).
{@[#1] = 12}(i) --( <11 : __retres2=(*void)0> : j )-> (j = i
                                                         \/ ({@[#1] = 12}(i)
                                                               /\ j != i)).
{@[#1] = 12}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 12}(i) /\ j != i).
{@[#1] = 12}(i) --( <23 : fork(&thread)> : j )-> ({@[#1] = 12}(i) /\ j != i).
{@[#1] = 12}(i) --( <21 : param0=(*void)(*void)0> : j )-> ({@[#1] = 12}(i)
                                                             /\ j != i).
{@[#1] = 12}(i) --( <20 : fork(&thread)> : j )-> ({@[#1] = 12}(i) /\ j != i).
{@[#1] = 12}(i) --( <18 : param0=(*void)(*void)0> : j )-> ({@[#1] = 12}(i)
                                                             /\ j != i).
{@[#1] = 12}(i) --( <17 : fork(&thread)> : j )-> ({@[#1] = 12}(i) /\ j != i).
{@[#1] = 12}(i) --( <15 : param0=(*void)(*void)0> : j )-> ({@[#1] = 12}(i)
                                                             /\ j != i).
{@[#1] = 12}(i) --( <9 : assume(0<=0)> : j )-> ({@[#1] = 12}(i) /\ j != i).
{@[#1] = 12}(i) --( <8 : return=*> : j )-> ({@[#1] = 12}(i) /\ j != i).
{@[#1] = 12}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 12}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> ({@[#1] = 12}(
                                                                 i) /\ 
                                                                   j != i).
{@[#1] = 12}(i) --( <2 : count=0> : j )-> ({@[#1] = 12}(i) /\ j != i).

{@[#1] = 15}(i) --( <29 : initial> : j )-> ({@[#1] = 15}(i) /\ j != i).
{@[#1] = 15}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 15}(i) /\ j != i).
{@[#1] = 15}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 15}(i)
                                                       /\ j != i).
{@[#1] = 15}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 15}(i)
                                                         /\ j != i).
{@[#1] = 15}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 15}(i) /\ j != i).
{@[#1] = 15}(i) --( <23 : fork(&thread)> : j )-> false.
{@[#1] = 15}(i) --( <21 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 15}(i) --( <20 : fork(&thread)> : j )-> j = i.
{@[#1] = 15}(i) --( <18 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 15}(i) --( <17 : fork(&thread)> : j )-> false.
{@[#1] = 15}(i) --( <15 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 15}(i) --( <9 : assume(0<=0)> : j )-> false.
{@[#1] = 15}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 15}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 15}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> false.
{@[#1] = 15}(i) --( <2 : count=0> : j )-> false.

{@[#1] = 2}(i) --( <29 : initial> : j )-> ({@[#1] = 2}(i) /\ j != i).
{@[#1] = 2}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 2}(i) /\ j != i).
{@[#1] = 2}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 2}(i) /\ j != i).
{@[#1] = 2}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 2}(i)
                                                        /\ j != i).
{@[#1] = 2}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 2}(i) /\ j != i).
{@[#1] = 2}(i) --( <23 : fork(&thread)> : j )-> false.
{@[#1] = 2}(i) --( <21 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 2}(i) --( <20 : fork(&thread)> : j )-> false.
{@[#1] = 2}(i) --( <18 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 2}(i) --( <17 : fork(&thread)> : j )-> false.
{@[#1] = 2}(i) --( <15 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 2}(i) --( <9 : assume(0<=0)> : j )-> j = i.
{@[#1] = 2}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 2}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 2}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> false.
{@[#1] = 2}(i) --( <2 : count=0> : j )-> false.

{@[#1] = 17}(i) --( <29 : initial> : j )-> ({@[#1] = 17}(i) /\ j != i).
{@[#1] = 17}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 17}(i) /\ j != i).
{@[#1] = 17}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 17}(i)
                                                       /\ j != i).
{@[#1] = 17}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 17}(i)
                                                         /\ j != i).
{@[#1] = 17}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 17}(i) /\ j != i).
{@[#1] = 17}(i) --( <23 : fork(&thread)> : j )-> false.
{@[#1] = 17}(i) --( <21 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 17}(i) --( <20 : fork(&thread)> : j )-> false.
{@[#1] = 17}(i) --( <18 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 17}(i) --( <17 : fork(&thread)> : j )-> false.
{@[#1] = 17}(i) --( <15 : param0=(*void)(*void)0> : j )-> j = i.
{@[#1] = 17}(i) --( <9 : assume(0<=0)> : j )-> false.
{@[#1] = 17}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 17}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 17}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> false.
{@[#1] = 17}(i) --( <2 : count=0> : j )-> false.

{@[#1] = 14}(i) --( <29 : initial> : j )-> ((j = i /\ {@[#1] = 29}(j))
                                              \/ ({@[#1] = 14}(i) /\ j != i)).
{@[#1] = 14}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 14}(i) /\ j != i).
{@[#1] = 14}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 14}(i)
                                                       /\ j != i).
{@[#1] = 14}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 14}(i)
                                                         /\ j != i).
{@[#1] = 14}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 14}(i) /\ j != i).
{@[#1] = 14}(i) --( <23 : fork(&thread)> : j )-> ({@[#1] = 14}(i) /\ j != i).
{@[#1] = 14}(i) --( <21 : param0=(*void)(*void)0> : j )-> ({@[#1] = 14}(i)
                                                             /\ j != i).
{@[#1] = 14}(i) --( <20 : fork(&thread)> : j )-> ({@[#1] = 14}(i) /\ j != i).
{@[#1] = 14}(i) --( <18 : param0=(*void)(*void)0> : j )-> ({@[#1] = 14}(i)
                                                             /\ j != i).
{@[#1] = 14}(i) --( <17 : fork(&thread)> : j )-> ({@[#1] = 14}(i) /\ j != i).
{@[#1] = 14}(i) --( <15 : param0=(*void)(*void)0> : j )-> ({@[#1] = 14}(i)
                                                             /\ j != i).
{@[#1] = 14}(i) --( <9 : assume(0<=0)> : j )-> ({@[#1] = 14}(i) /\ j != i).
{@[#1] = 14}(i) --( <8 : return=*> : j )-> ({@[#1] = 14}(i) /\ j != i).
{@[#1] = 14}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 14}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> ({@[#1] = 14}(
                                                                 i) /\ 
                                                                   j != i).
{@[#1] = 14}(i) --( <2 : count=0> : j )-> ({@[#1] = 14}(i) /\ j != i).

{@[#1] = 27}(i) --( <29 : initial> : j )-> false.
{@[#1] = 27}(i) --( <14 : arg=param0> : j )-> (j = i /\ {@[#1] = 27}(i)).
{@[#1] = 27}(i) --( <12 : return=__retres2> : j )-> (j = i /\ {@[#1] = 27}(i)).
{@[#1] = 27}(i) --( <11 : __retres2=(*void)0> : j )-> (j = i
                                                         /\ {@[#1] = 27}(i)).
{@[#1] = 27}(i) --( <10 : count=(count+1)> : j )-> (j = i /\ {@[#1] = 27}(i)).
{@[#1] = 27}(i) --( <23 : fork(&thread)> : j )-> (j = i /\ {@[#1] = 27}(i)).
{@[#1] = 27}(i) --( <21 : param0=(*void)(*void)0> : j )-> (j = i
                                                             /\ {@[#1] = 27}(
                                                                i)).
{@[#1] = 27}(i) --( <20 : fork(&thread)> : j )-> (j = i /\ {@[#1] = 27}(i)).
{@[#1] = 27}(i) --( <18 : param0=(*void)(*void)0> : j )-> (j = i
                                                             /\ {@[#1] = 27}(
                                                                i)).
{@[#1] = 27}(i) --( <17 : fork(&thread)> : j )-> (j = i /\ {@[#1] = 27}(i)).
{@[#1] = 27}(i) --( <15 : param0=(*void)(*void)0> : j )-> (j = i
                                                             /\ {@[#1] = 27}(
                                                                i)).
{@[#1] = 27}(i) --( <9 : assume(0<=0)> : j )-> (j = i /\ {@[#1] = 27}(i)).
{@[#1] = 27}(i) --( <8 : return=*> : j )-> (j = i /\ {@[#1] = 27}(i)).
{@[#1] = 27}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 27}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> (j = i
                                                                   /\ 
                                                                   {@[#1] = 27}(
                                                                   i)).
{@[#1] = 27}(i) --( <2 : count=0> : j )-> (j = i /\ {@[#1] = 27}(i)).

{count <= 2}() --( <29 : initial> : i )-> ({count <= 2}() /\ {count <= 2}()).
{count <= 2}() --( <14 : arg=param0> : i )-> ({count <= 2}()
                                                /\ {count <= 2}()).
{count <= 2}() --( <12 : return=__retres2> : i )-> ({count <= 2}()
                                                      /\ {count <= 2}()).
{count <= 2}() --( <11 : __retres2=(*void)0> : i )-> ({count <= 2}()
                                                        /\ {count <= 2}()).
{count <= 2}() --( <10 : count=(count+1)> : i )-> {count <= 1}().
{count <= 2}() --( <23 : fork(&thread)> : i )-> ({count <= 2}()
                                                   /\ {count <= 2}()
                                                   /\ {count <= 2}()
                                                   /\ {count <= 2}()).
{count <= 2}() --( <21 : param0=(*void)(*void)0> : i )-> ({count <= 2}()
                                                            /\ {count <= 2}()
                                                            /\ {count <= 2}()
                                                            /\ {count <= 2}()).
{count <= 2}() --( <20 : fork(&thread)> : i )-> ({count <= 2}()
                                                   /\ {count <= 2}()
                                                   /\ {count <= 2}()).
{count <= 2}() --( <18 : param0=(*void)(*void)0> : i )-> ({count <= 2}()
                                                            /\ {count <= 2}()
                                                            /\ {count <= 2}()).
{count <= 2}() --( <17 : fork(&thread)> : i )-> ({count <= 2}()
                                                   /\ {count <= 2}()
                                                   /\ {count <= 2}()).
{count <= 2}() --( <15 : param0=(*void)(*void)0> : i )-> ({count <= 2}()
                                                            /\ {count <= 2}()
                                                            /\ {count <= 2}()).
{count <= 2}() --( <9 : assume(0<=0)> : i )-> ({count <= 2}()
                                                 /\ {count <= 2}()).
{count <= 2}() --( <8 : return=*> : i )-> ({count <= 2}() /\ {count <= 2}()).
{count <= 2}() --( <28 : assume(2<count)> : i )-> ({count <= 2}()
                                                     /\ {count <= 2}()).
{count <= 2}() --( <6 : assert(count<=2) : count <= 2> : i )-> ({count <= 2}(
                                                                )
                                                                  /\ 
                                                                  {count <= 2}(
                                                                  )).
{count <= 2}() --( <2 : count=0> : i )-> false.

{@[#1] = 23}(i) --( <29 : initial> : j )-> ({@[#1] = 23}(i) /\ j != i).
{@[#1] = 23}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 23}(i) /\ j != i).
{@[#1] = 23}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 23}(i)
                                                       /\ j != i).
{@[#1] = 23}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 23}(i)
                                                         /\ j != i).
{@[#1] = 23}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 23}(i) /\ j != i).
{@[#1] = 23}(i) --( <23 : fork(&thread)> : j )-> false.
{@[#1] = 23}(i) --( <21 : param0=(*void)(*void)0> : j )-> j = i.
{@[#1] = 23}(i) --( <20 : fork(&thread)> : j )-> false.
{@[#1] = 23}(i) --( <18 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 23}(i) --( <17 : fork(&thread)> : j )-> false.
{@[#1] = 23}(i) --( <15 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 23}(i) --( <9 : assume(0<=0)> : j )-> false.
{@[#1] = 23}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 23}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 23}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> false.
{@[#1] = 23}(i) --( <2 : count=0> : j )-> false.

{@[#1] = 18}(i) --( <29 : initial> : j )-> ({@[#1] = 18}(i) /\ j != i).
{@[#1] = 18}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 18}(i) /\ j != i).
{@[#1] = 18}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 18}(i)
                                                       /\ j != i).
{@[#1] = 18}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 18}(i)
                                                         /\ j != i).
{@[#1] = 18}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 18}(i) /\ j != i).
{@[#1] = 18}(i) --( <23 : fork(&thread)> : j )-> false.
{@[#1] = 18}(i) --( <21 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 18}(i) --( <20 : fork(&thread)> : j )-> false.
{@[#1] = 18}(i) --( <18 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 18}(i) --( <17 : fork(&thread)> : j )-> false.
{@[#1] = 18}(i) --( <15 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 18}(i) --( <9 : assume(0<=0)> : j )-> false.
{@[#1] = 18}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 18}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 18}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> false.
{@[#1] = 18}(i) --( <2 : count=0> : j )-> j = i.

{@[#1] = 20}(i) --( <29 : initial> : j )-> ({@[#1] = 20}(i) /\ j != i).
{@[#1] = 20}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 20}(i) /\ j != i).
{@[#1] = 20}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 20}(i)
                                                       /\ j != i).
{@[#1] = 20}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 20}(i)
                                                         /\ j != i).
{@[#1] = 20}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 20}(i) /\ j != i).
{@[#1] = 20}(i) --( <23 : fork(&thread)> : j )-> false.
{@[#1] = 20}(i) --( <21 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 20}(i) --( <20 : fork(&thread)> : j )-> false.
{@[#1] = 20}(i) --( <18 : param0=(*void)(*void)0> : j )-> j = i.
{@[#1] = 20}(i) --( <17 : fork(&thread)> : j )-> false.
{@[#1] = 20}(i) --( <15 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 20}(i) --( <9 : assume(0<=0)> : j )-> false.
{@[#1] = 20}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 20}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 20}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> false.
{@[#1] = 20}(i) --( <2 : count=0> : j )-> false.

{@[#1] = 11}(i) --( <29 : initial> : j )-> ({@[#1] = 11}(i) /\ j != i).
{@[#1] = 11}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 11}(i) /\ j != i).
{@[#1] = 11}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 11}(i)
                                                       /\ j != i).
{@[#1] = 11}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 11}(i)
                                                         /\ j != i).
{@[#1] = 11}(i) --( <10 : count=(count+1)> : j )-> (j = i
                                                      \/ ({@[#1] = 11}(i)
                                                            /\ j != i)).
{@[#1] = 11}(i) --( <23 : fork(&thread)> : j )-> ({@[#1] = 11}(i) /\ j != i).
{@[#1] = 11}(i) --( <21 : param0=(*void)(*void)0> : j )-> ({@[#1] = 11}(i)
                                                             /\ j != i).
{@[#1] = 11}(i) --( <20 : fork(&thread)> : j )-> ({@[#1] = 11}(i) /\ j != i).
{@[#1] = 11}(i) --( <18 : param0=(*void)(*void)0> : j )-> ({@[#1] = 11}(i)
                                                             /\ j != i).
{@[#1] = 11}(i) --( <17 : fork(&thread)> : j )-> ({@[#1] = 11}(i) /\ j != i).
{@[#1] = 11}(i) --( <15 : param0=(*void)(*void)0> : j )-> ({@[#1] = 11}(i)
                                                             /\ j != i).
{@[#1] = 11}(i) --( <9 : assume(0<=0)> : j )-> ({@[#1] = 11}(i) /\ j != i).
{@[#1] = 11}(i) --( <8 : return=*> : j )-> ({@[#1] = 11}(i) /\ j != i).
{@[#1] = 11}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 11}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> ({@[#1] = 11}(
                                                                 i) /\ 
                                                                   j != i).
{@[#1] = 11}(i) --( <2 : count=0> : j )-> ({@[#1] = 11}(i) /\ j != i).

{@[#1] = 8}(i) --( <29 : initial> : j )-> ({@[#1] = 8}(i) /\ j != i).
{@[#1] = 8}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 8}(i) /\ j != i).
{@[#1] = 8}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 8}(i) /\ j != i).
{@[#1] = 8}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 8}(i)
                                                        /\ j != i).
{@[#1] = 8}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 8}(i) /\ j != i).
{@[#1] = 8}(i) --( <23 : fork(&thread)> : j )-> false.
{@[#1] = 8}(i) --( <21 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 8}(i) --( <20 : fork(&thread)> : j )-> false.
{@[#1] = 8}(i) --( <18 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 8}(i) --( <17 : fork(&thread)> : j )-> false.
{@[#1] = 8}(i) --( <15 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 8}(i) --( <9 : assume(0<=0)> : j )-> false.
{@[#1] = 8}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 8}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 8}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> j = i.
{@[#1] = 8}(i) --( <2 : count=0> : j )-> false.

{@[#1] = 9}(i) --( <29 : initial> : j )-> ({@[#1] = 9}(i) /\ j != i).
{@[#1] = 9}(i) --( <14 : arg=param0> : j )-> ({@[#1] = 9}(i) /\ j != i).
{@[#1] = 9}(i) --( <12 : return=__retres2> : j )-> ({@[#1] = 9}(i) /\ j != i).
{@[#1] = 9}(i) --( <11 : __retres2=(*void)0> : j )-> ({@[#1] = 9}(i)
                                                        /\ j != i).
{@[#1] = 9}(i) --( <10 : count=(count+1)> : j )-> ({@[#1] = 9}(i) /\ j != i).
{@[#1] = 9}(i) --( <23 : fork(&thread)> : j )-> false.
{@[#1] = 9}(i) --( <21 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 9}(i) --( <20 : fork(&thread)> : j )-> false.
{@[#1] = 9}(i) --( <18 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 9}(i) --( <17 : fork(&thread)> : j )-> false.
{@[#1] = 9}(i) --( <15 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 9}(i) --( <9 : assume(0<=0)> : j )-> false.
{@[#1] = 9}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 9}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 9}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> false.
{@[#1] = 9}(i) --( <2 : count=0> : j )-> false.

{true}() --( <29 : initial> : i )-> {true}().
{true}() --( <14 : arg=param0> : i )-> ({true}() /\ {@[#1] = 14}(i)).
{true}() --( <12 : return=__retres2> : i )-> ({true}() /\ {@[#1] = 12}(i)).
{true}() --( <11 : __retres2=(*void)0> : i )-> ({true}() /\ {@[#1] = 11}(i)).
{true}() --( <10 : count=(count+1)> : i )-> ({true}() /\ {@[#1] = 10}(i)).
{true}() --( <23 : fork(&thread)> : i )-> ({true}() /\ {@[#1] = 23}(i)).
{true}() --( <21 : param0=(*void)(*void)0> : i )-> ({true}()
                                                      /\ {@[#1] = 21}(i)).
{true}() --( <20 : fork(&thread)> : i )-> ({true}() /\ {@[#1] = 20}(i)).
{true}() --( <18 : param0=(*void)(*void)0> : i )-> ({true}()
                                                      /\ {@[#1] = 18}(i)).
{true}() --( <17 : fork(&thread)> : i )-> ({true}() /\ {@[#1] = 17}(i)).
{true}() --( <15 : param0=(*void)(*void)0> : i )-> ({true}()
                                                      /\ {@[#1] = 15}(i)).
{true}() --( <9 : assume(0<=0)> : i )-> ({true}() /\ {@[#1] = 9}(i)).
{true}() --( <8 : return=*> : i )-> ({true}() /\ {@[#1] = 8}(i)).
{true}() --( <28 : assume(2<count)> : i )-> ({true}() /\ {@[#1] = 6}(i)).
{true}() --( <6 : assert(count<=2) : count <= 2> : i )-> ({true}()
                                                            /\ {@[#1] = 6}(i)).
{true}() --( <2 : count=0> : i )-> ({true}() /\ {@[#1] = 2}(i)).

{count <= 1}() --( <29 : initial> : i )-> ({count <= 1}() /\ {count <= 1}()
                                             /\ {count <= 1}()).
{count <= 1}() --( <14 : arg=param0> : i )-> ({count <= 1}()
                                                /\ {count <= 1}()
                                                /\ {count <= 1}()).
{count <= 1}() --( <12 : return=__retres2> : i )-> ({count <= 1}()
                                                      /\ {count <= 1}()).
{count <= 1}() --( <11 : __retres2=(*void)0> : i )-> ({count <= 1}()
                                                        /\ {count <= 1}()).
{count <= 1}() --( <10 : count=(count+1)> : i )-> ({count <= 0}()
                                                     /\ {count <= 0}()).
{count <= 1}() --( <23 : fork(&thread)> : i )-> ({count <= 1}()
                                                   /\ {count <= 1}()
                                                   /\ {count <= 1}()).
{count <= 1}() --( <21 : param0=(*void)(*void)0> : i )-> ({count <= 1}()
                                                            /\ {count <= 1}()
                                                            /\ {count <= 1}()).
{count <= 1}() --( <20 : fork(&thread)> : i )-> ({count <= 1}()
                                                   /\ {count <= 1}()).
{count <= 1}() --( <18 : param0=(*void)(*void)0> : i )-> ({count <= 1}()
                                                            /\ {count <= 1}()).
{count <= 1}() --( <17 : fork(&thread)> : i )-> ({count <= 1}()
                                                   /\ {count <= 1}()
                                                   /\ {count <= 1}()
                                                   /\ {count <= 1}()).
{count <= 1}() --( <15 : param0=(*void)(*void)0> : i )-> ({count <= 1}()
                                                            /\ {count <= 1}()
                                                            /\ {count <= 1}()).
{count <= 1}() --( <9 : assume(0<=0)> : i )-> ({count <= 1}()
                                                 /\ {count <= 1}()).
{count <= 1}() --( <8 : return=*> : i )-> ({count <= 1}() /\ {count <= 1}()).
{count <= 1}() --( <28 : assume(2<count)> : i )-> ({count <= 1}()
                                                     /\ {count <= 1}()).
{count <= 1}() --( <6 : assert(count<=2) : count <= 2> : i )-> ({count <= 1}(
                                                                )
                                                                  /\ 
                                                                  {count <= 1}(
                                                                  )).
{count <= 1}() --( <2 : count=0> : i )-> true.

{count <= 0}() --( <29 : initial> : i )-> ({count <= 0}() /\ {count <= 0}()
                                             /\ {count <= 0}()
                                             /\ {count <= 0}()).
{count <= 0}() --( <14 : arg=param0> : i )-> ({count <= 0}()
                                                /\ {count <= 0}()
                                                /\ {count <= 0}()
                                                /\ {count <= 0}()).
{count <= 0}() --( <12 : return=__retres2> : i )-> ({count <= 0}()
                                                      /\ {count <= 0}()).
{count <= 0}() --( <11 : __retres2=(*void)0> : i )-> ({count <= 0}()
                                                        /\ {count <= 0}()).
{count <= 0}() --( <10 : count=(count+1)> : i )-> true.
{count <= 0}() --( <23 : fork(&thread)> : i )-> ({count <= 0}()
                                                   /\ {count <= 0}()).
{count <= 0}() --( <21 : param0=(*void)(*void)0> : i )-> ({count <= 0}()
                                                            /\ {count <= 0}()).
{count <= 0}() --( <20 : fork(&thread)> : i )-> ({count <= 0}()
                                                   /\ {count <= 0}()
                                                   /\ {count <= 0}()
                                                   /\ {count <= 0}()).
{count <= 0}() --( <18 : param0=(*void)(*void)0> : i )-> ({count <= 0}()
                                                            /\ {count <= 0}()
                                                            /\ {count <= 0}()
                                                            /\ {count <= 0}()).
{count <= 0}() --( <17 : fork(&thread)> : i )-> ({count <= 0}()
                                                   /\ {count <= 0}()).
{count <= 0}() --( <15 : param0=(*void)(*void)0> : i )-> ({count <= 0}()
                                                            /\ {count <= 0}()
                                                            /\ {count <= 0}()).
{count <= 0}() --( <9 : assume(0<=0)> : i )-> ({count <= 0}()
                                                 /\ {count <= 0}()).
{count <= 0}() --( <8 : return=*> : i )-> ({count <= 0}() /\ {count <= 0}()).
{count <= 0}() --( <28 : assume(2<count)> : i )-> ({count <= 0}()
                                                     /\ {count <= 0}()).
{count <= 0}() --( <6 : assert(count<=2) : count <= 2> : i )-> ({count <= 0}(
                                                                )
                                                                  /\ 
                                                                  {count <= 0}(
                                                                  )).
{count <= 0}() --( <2 : count=0> : i )-> false.

{@[#1] = 29}(i) --( <29 : initial> : j )-> false.
{@[#1] = 29}(i) --( <14 : arg=param0> : j )-> false.
{@[#1] = 29}(i) --( <12 : return=__retres2> : j )-> false.
{@[#1] = 29}(i) --( <11 : __retres2=(*void)0> : j )-> false.
{@[#1] = 29}(i) --( <10 : count=(count+1)> : j )-> false.
{@[#1] = 29}(i) --( <23 : fork(&thread)> : j )-> true.
{@[#1] = 29}(i) --( <21 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 29}(i) --( <20 : fork(&thread)> : j )-> true.
{@[#1] = 29}(i) --( <18 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 29}(i) --( <17 : fork(&thread)> : j )-> true.
{@[#1] = 29}(i) --( <15 : param0=(*void)(*void)0> : j )-> false.
{@[#1] = 29}(i) --( <9 : assume(0<=0)> : j )-> false.
{@[#1] = 29}(i) --( <8 : return=*> : j )-> false.
{@[#1] = 29}(i) --( <28 : assume(2<count)> : j )-> false.
{@[#1] = 29}(i) --( <6 : assert(count<=2) : count <= 2> : j )-> false.
{@[#1] = 29}(i) --( <2 : count=0> : j )-> false.
